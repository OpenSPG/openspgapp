<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 Ant Group CO., Ltd.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied.
-->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antgroup.openspg.app.infra.dao.mapper.ProjectMemberRoleInfoMapper">
  <resultMap id="BaseResultMap" type="com.antgroup.openspg.app.infra.dao.dataobject.permission.ProjectMemberRoleInfoDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    id, role_id, project_id, user_no, status, gmt_create, gmt_modified
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    select 
    <include refid="Base_Column_List" />
    from kg_project_member_role_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  

  <select id="selectByCondition" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    select <include refid="Base_Column_List" />
    from kg_project_member_role_info
    <trim prefix="where" prefixOverrides="and">
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT}
      </if>
      <if test="record.projectId != null">
        and project_id = #{record.projectId,jdbcType=BIGINT}
      </if>
      <if test="record.userNo != null">
        and user_no = #{record.userNo,jdbcType=VARCHAR}
      </if>
      <if test="record.status != null">
        and status = #{record.status,jdbcType=VARCHAR}
      </if>
      <if test="record.gmtCreate != null">
        and gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.gmtModified != null">
        and gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
      </if>
    </trim>
    order by id desc limit #{start}, #{size}
  </select>
  

  <select id="selectCountByCondition" parameterType="com.antgroup.openspg.app.infra.dao.dataobject.permission.ProjectMemberRoleInfoDO" resultType="java.lang.Integer" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    select count(*) from kg_project_member_role_info
    <trim prefix="where" prefixOverrides="and">
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT}
      </if>
      <if test="projectId != null">
        and project_id = #{projectId,jdbcType=BIGINT}
      </if>
      <if test="userNo != null">
        and user_no = #{userNo,jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and status = #{status,jdbcType=VARCHAR}
      </if>
      <if test="gmtCreate != null">
        and gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="gmtModified != null">
        and gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </select>
  

  <select id="selectByIds" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    select <include refid="Base_Column_List" />
    from kg_project_member_role_info where id in
    <foreach close=")" collection="ids" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>
  

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    delete from kg_project_member_role_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  

  <delete id="deleteByIds">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    delete from kg_project_member_role_info where id in 
    <foreach close=")" collection="ids" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>
  

  <insert id="insert" parameterType="com.antgroup.openspg.app.infra.dao.dataobject.permission.ProjectMemberRoleInfoDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into kg_project_member_role_info (role_id, project_id, user_no, 
      status, gmt_create, gmt_modified
      )
    values (#{roleId,jdbcType=BIGINT}, #{projectId,jdbcType=BIGINT}, #{userNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}
      )
  </insert>
  

  <update id="updateByPrimaryKeySelective" parameterType="com.antgroup.openspg.app.infra.dao.dataobject.permission.ProjectMemberRoleInfoDO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    update kg_project_member_role_info
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 删除项目成员 -->
  <delete id="deleteByProjectId" parameterType="java.lang.Long">
    delete from kg_project_member_role_info
    where project_id = #{projectId,jdbcType=BIGINT}
  </delete>

  <!-- 批量插入-->
  <insert id="batchInsert">
    insert into kg_project_member_role_info (role_id, project_id, user_no,
    status, gmt_create, gmt_modified
    )
    values
    <foreach collection ="records" item="item" separator =",">
      (#{item.roleId,jdbcType=BIGINT},
      #{item.projectId,jdbcType=BIGINT},
      #{item.userNo,jdbcType=VARCHAR},
      #{item.status,jdbcType=VARCHAR},
      #{item.gmtCreate,jdbcType=TIMESTAMP},
      #{item.gmtModified,jdbcType=TIMESTAMP}
      )
    </foreach >
  </insert>

  <select id="selectAllByCondition" resultMap="BaseResultMap" useCache="false">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 28 17:32:23 CST 2020.
    -->
    select <include refid="Base_Column_List" /> from kg_project_member_role_info
    <trim prefix="where" prefixOverrides="and">
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT}
      </if>
      <if test="record.projectId != null">
        and project_id = #{record.projectId,jdbcType=BIGINT}
      </if>
      <if test="record.userNo != null">
        and user_no = #{record.userNo,jdbcType=VARCHAR}
      </if>
      <if test="record.status != null">
        and status = #{record.status,jdbcType=VARCHAR}
      </if>
      <if test="record.gmtCreate != null">
        and gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP}
      </if>
      <if test="record.gmtModified != null">
        and gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
      </if>
    </trim>
  </select>

  <select id="selectByUserNo" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from kg_project_member_role_info where user_no = #{userNo,jdbcType=VARCHAR} and status = 'VALID'
  </select>

  <select id="selectUserRoleInfo" resultMap="UserRoleMap">
    select
    project_member_role_info.id as id
    ,project_member_role_info.user_no as user_no
    ,project_member_role_info.project_id as project_id
    ,role_info.role_name as role_name
    ,role_info.permission_detail as permission_detail
    from kg_project_member_role_info as project_member_role_info
    left join
    (select
    id
    ,role_name
    ,permission_detail
    from kg_role
    ) as role_info on role_info.id = project_member_role_info.role_id
    <trim prefix="where" prefixOverrides="and">
      <if test="status != null">
        project_member_role_info.status = #{status}
      </if>
      <if test="userNo != null">
        and project_member_role_info.user_no = #{userNo}
      </if>
    </trim>
  </select>

  <select id="selectUserRoleInfoByRoleType" resultMap="UserRoleMap">
    select
    project_member_role_info.id as id
    ,project_member_role_info.user_no as user_no
    ,project_member_role_info.project_id as project_id
    ,role_info.role_name as role_name
    ,role_info.permission_detail as permission_detail
    from kg_role as role_info
    inner join
    (
    select
    id
    ,role_id
    ,user_no
    ,project_id
    from kg_project_member_role_info
    <trim prefix="where" prefixOverrides="and">
      <if test="status != null">
        status = #{status}
      </if>
    </trim>
    ) as project_member_role_info on role_info.id = project_member_role_info.role_id
    <trim prefix="where" prefixOverrides="and">
      <if test="roleName != null">
        role_info.role_name = #{roleName}
      </if>
    </trim>
  </select>

  <select id="selectUserRoleInfoByProjectRoleTypes" resultMap="UserRoleMap">
    select
    project_member_role_info.id as id
    ,project_member_role_info.user_no as user_no
    ,project_member_role_info.project_id as project_id
    ,role_info.role_name as role_name
    ,role_info.permission_detail as permission_detail
    from kg_role as role_info
    inner join
    (
    select
    id
    ,role_id
    ,user_no
    ,project_id
    from kg_project_member_role_info
    <trim prefix="where" prefixOverrides="and">
      <if test="status != null">
        status = #{status}
      </if>
      <if test="projectId != null">
        and project_id = #{projectId}
      </if>
    </trim>
    ) as project_member_role_info on role_info.id = project_member_role_info.role_id
    where
    role_info.role_name in
    <foreach close=")" collection="roleNames" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="selectForUpdate" resultMap="BaseResultMap" >
    select id,role_id,project_id,user_no,status,gmt_create,gmt_modified from kg_project_member_role_info
     where id > 0 for update
  </select>

  <update id="updateByProjectId">
    update kg_project_member_role_info
    <set>
      gmt_modified = CURRENT_TIMESTAMP,
      <if test="id != 0">
        id = #{id},
      </if>
      <if test="roleId != 0">
        role_id = #{roleId},
      </if>
      <if test="userNo != null">
        user_no = #{userNo},
      </if>
      <if test="status != null">
        status = #{status},
      </if>
    </set>
    where  project_id = #{projectId}
  </update>
  
  <update id="updateByProjectAndUserNo">
    update kg_project_member_role_info
    <set>
      gmt_modified = CURRENT_TIMESTAMP,
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    where  project_id = #{record.projectId} and user_no = #{record.userNo}
  </update>

  <select id="selectMemberWithFilter" resultMap="BaseResultMap" >
    select id,role_id,project_id,t1.user_no as user_no,status,gmt_create,gmt_modified
    from kg_project_member_role_info t1,
         (
           select user_no from kg_user
           where user_no like concat('%',#{filter},'%') or
             lower(real_name) like concat('%',#{filter},'%') or
             lower(nick_name) like concat('%',#{filter},'%')
         ) t2
    where t1.user_no = t2.user_no
      and t1.project_id = #{projectId}
      and t1.status = 'VALID'
    <if test="roleId != null">
      and t1.role_id = #{roleId}
    </if>
    order by t1.gmt_modified desc
      limit #{start}, #{size}
  </select>

  <select id="selectMemberCountWithFilter" resultType="int">
    select count(*)
    from kg_project_member_role_info t1,
         (
           select user_no from kg_user
           where user_no like concat('%',#{filter},'%') or
             lower(real_name) like concat('%',#{filter},'%') or
             lower(nick_name) like concat('%',#{filter},'%')
         ) t2
    where t1.user_no = t2.user_no
      and t1.project_id = #{projectId}
      and t1.status = 'VALID'
    <if test="roleId != null">
      and t1.role_id = #{roleId}
    </if>
  </select>

  <select id="selectByProjectIdAndUserNo" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />
    from kg_project_member_role_info where project_id = #{projectId} and user_no = #{userNo,jdbcType=VARCHAR} and status = 'VALID'
  </select>

</mapper>